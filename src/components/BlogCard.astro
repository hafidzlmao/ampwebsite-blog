---
import { formatDate } from '../utils/formatDate';
import { getCategoryColor } from '../utils/blogHelpers';
import type { CollectionEntry } from 'astro:content';

interface Props {
  post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;
const { data } = post;
---

<article class="card">
  {data.image && (
    <div class="relative">
      <img
        src={data.image}
        alt={data.imageAlt || data.title}
        class="w-full h-48 object-cover"
      />
      <span 
        class={`absolute top-4 left-4 px-3 py-1 rounded-full text-sm font-medium ${getCategoryColor(data.category)}`}
      >
        {data.category}
      </span>
    </div>
  )}
  <div class="p-6">
    <div class="flex items-center text-sm text-gray-500 mb-3">
      <time datetime={data.pubDate.toISOString()}>
        {formatDate(data.pubDate)}
      </time>
      <span class="mx-2">â€¢</span>
      <span>{data.readingTime} menit baca</span>
    </div>
    <h3 class="text-xl font-semibold mb-3">
      <a href={`/blog/${post.slug}`} class="hover:text-[#4169E1] transition-colors">
        {data.title}
      </a>
    </h3>
    <p class="text-gray-600 mb-4 line-clamp-2">
      {data.description}
    </p>
    <div class="flex items-center justify-between">
      <div class="flex items-center space-x-3">
        {data.author.image && (
          <img
            src={data.author.image}
            alt={data.author.name}
            class="w-8 h-8 rounded-full"
          />
        )}
        <div>
          <p class="text-sm font-medium">{data.author.name}</p>
          <p class="text-xs text-gray-500">{data.author.title}</p>
        </div>
      </div>
      <div class="flex gap-2">
        {data.tags.slice(0, 2).map((tag) => (
          <span class="text-sm px-3 py-1 bg-gray-100 text-gray-600 rounded-full">
            {tag}
          </span>
        ))}
      </div>
    </div>
  </div>
</article>